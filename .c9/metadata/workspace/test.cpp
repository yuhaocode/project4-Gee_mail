{"filter":false,"title":"test.cpp","tooltip":"/test.cpp","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":6,"column":1},"action":"remove","lines":["#include \"DBConnector.h\"","","int main()","{","    DBConnector connector(\"gee_email.db\");","    return 0;   ","}"],"id":2},{"start":{"row":0,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["#include <iostream>","#include <string>","#include <conio.h>","using namespace std;","int main(){","   string pass =\"\";","   char ch;","   cout << \"Enter pass\\n\";","   ch = _getch();","   while(ch != 13){//character 13 is enter","      pass.push_back(ch);","      cout << '*';","      ch = _getch();","   }","   if(pass == \"Mitsakos\"){","      cout << \"\\nAccess granted :P\\n\";","   }else{","      cout << \"\\nAccess aborted...\\n\";","   }","}","Edit & Run",""]}],[{"start":{"row":0,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["#include <iostream>","#include <string>","#include <conio.h>","using namespace std;","int main(){","   string pass =\"\";","   char ch;","   cout << \"Enter pass\\n\";","   ch = _getch();","   while(ch != 13){//character 13 is enter","      pass.push_back(ch);","      cout << '*';","      ch = _getch();","   }","   if(pass == \"Mitsakos\"){","      cout << \"\\nAccess granted :P\\n\";","   }else{","      cout << \"\\nAccess aborted...\\n\";","   }","}","Edit & Run","",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":61,"column":3},"action":"insert","lines":["#include <iostream>","#include <stdexcept>","#include <string>","#include <windows.h>","using namespace std;","","string getpassword( const string& prompt = \"Enter password> \" )","  {","  string result;","","  // Set the console mode to no-echo, not-line-buffered input","  DWORD mode, count;","  HANDLE ih = GetStdHandle( STD_INPUT_HANDLE  );","  HANDLE oh = GetStdHandle( STD_OUTPUT_HANDLE );","  if (!GetConsoleMode( ih, &mode ))","    throw runtime_error(","      \"getpassword: You must be connected to a console to use this program.\\n\"","      );","  SetConsoleMode( ih, mode & ~(ENABLE_ECHO_INPUT | ENABLE_LINE_INPUT) );","","  // Get the password string","  WriteConsoleA( oh, prompt.c_str(), prompt.length(), &count, NULL );","  char c;","  while (ReadConsoleA( ih, &c, 1, &count, NULL) && (c != '\\r') && (c != '\\n'))","    {","    if (c == '\\b')","      {","      if (result.length())","        {","        WriteConsoleA( oh, \"\\b \\b\", 3, &count, NULL );","        result.erase( result.end() -1 );","        }","      }","    else","      {","      WriteConsoleA( oh, \"*\", 1, &count, NULL );","      result.push_back( c );","      }","    }","","  // Restore the console mode","  SetConsoleMode( ih, mode );","","  return result;","  }","","int main()","  {","  try {","","    string password = getpassword( \"Enter a test password> \" );","    cout << \"\\nYour password is \" << password << endl;","","    }","  catch (exception& e)","    {","    cerr << e.what();","    return 1;","    }","","  return 0;","  }"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":52,"column":0},"end":{"row":52,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1479411819161,"hash":"7f6a2341cb2b7d5ecd4c27a1629086753504cf08"}